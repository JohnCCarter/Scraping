name: Ultimate Magnificent Scraper CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install black flake8 pytest pytest-asyncio
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --max-line-length=120 --ignore=E501,W503
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics --ignore=E501,W503
    
    - name: Format check with black
      run: |
        black --check --diff --line-length 120 .
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=ULTIMATE_MAGNIFICENT_SCRAPER --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install bandit safety
    
    - name: Run security scan with bandit
      run: |
        bandit -r . -f json -o bandit-report.json || true
    
    - name: Run safety check
      run: |
        safety check --json --output safety-report.json || true

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Ultimate Magnificent Scraper v${{ github.run_number }}
        body: |
          ðŸš€ Ultimate Magnificent Scraper Release v${{ github.run_number }}
          
          ## âœ¨ Features
          - Magnifik AI-intelligens och avancerad analys
          - Avancerad databas med komprimering
          - SÃ¤kerhetsanalys och GDPR-compliance
          - SEO-optimering och tillgÃ¤nglighetsanalys
          - Magnifik och responsiv UI
          
          ## ðŸ”§ Improvements
          - FÃ¶rbÃ¤ttrad JavaScript-funktionalitet
          - Fixade CSS-kompatibilitet fÃ¶r Safari
          - Lagt till fÃ¶rdefinierade plattformar
          - FÃ¶rbÃ¤ttrad AI-analys och export
          
          ## ðŸ“¦ Installation
          ```bash
          pip install ultimate-magnificent-scraper
          ```
        draft: false
        prerelease: false
